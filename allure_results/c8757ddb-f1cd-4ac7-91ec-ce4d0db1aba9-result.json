{"name": "Проверка всплывающего окна с деталями заказа при клике", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x00000162E28D6490>, main_page = <web_pages.create_order_page.CreateOrderPage object at 0x00000162E2933230>\n\n    @allure.title('Проверка всплывающего окна с деталями заказа при клике')\n    @allure.description('Клик на заказ и проверка появления всплывающего окна с деталями заказа')\n    def test_get_order_popup(self, main_page):\n    \n        main_page.click_order_button()\n    \n>       order_number = main_page.get_with_order_id()\n\ntests\\test_create_order.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nweb_pages\\create_order_page.py:59: in get_with_order_id\n    self.not_in_element(MainPageLocators.ORDER_ID, \"9999\")\nweb_pages\\base_page.py:17: in not_in_element\n    WebDriverWait(self.driver,SLEEP).until(none_of(EC.text_to_be_present_in_element(element,text)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dd200bf2921ac557ace2dcb2adc9a23f\")>, method = <function none_of.<locals>.none_of_condition at 0x00000162E29E6200>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Клик на заказ и проверка появления всплывающего окна с деталями заказа", "steps": [{"name": "Нажать на кнопку Оформить заказ", "status": "passed", "steps": [{"name": "Переместиться до элемента и кликнуть", "status": "passed", "steps": [{"name": "Дождаться видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Оформить заказ']\")"}], "start": 1745245510230, "stop": 1745245510241}], "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Оформить заказ']\")"}], "start": 1745245510230, "stop": 1745245510249}], "start": 1745245510230, "stop": 1745245510249}, {"name": "Получение ORDER_ID", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\MAKTRAXER\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\MAKTRAXER\\PycharmProjects\\Diplom_3\\web_pages\\create_order_page.py\", line 59, in get_with_order_id\n    self.not_in_element(MainPageLocators.ORDER_ID, \"9999\")\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\MAKTRAXER\\PycharmProjects\\Diplom_3\\web_pages\\base_page.py\", line 17, in not_in_element\n    WebDriverWait(self.driver,SLEEP).until(none_of(EC.text_to_be_present_in_element(element,text)))\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\MAKTRAXER\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "Дождаться видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"идентификатор заказа\"]')"}], "start": 1745245510251, "stop": 1745245510267}], "start": 1745245510249, "stop": 1745245520666}], "start": 1745245510230, "stop": 1745245520678, "uuid": "c9ce5df5-bc38-40be-8cea-a1b3946f089b", "historyId": "a065857241ad9b03120b4318bbaca62c", "testCaseId": "a065857241ad9b03120b4318bbaca62c", "fullName": "tests.test_create_order.TestCreateOrder#test_get_order_popup", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "DESKTOP-T21O29B"}, {"name": "thread", "value": "26496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}